import streamlit as st
import psycopg2
from datetime import datetime
import requests

# === Telegram Configuration ===
TELEGRAM_TOKEN = "8479232119:AAEVm2sS365HzMHoeoQGOynqUVPV70A-jHA"
TELEGRAM_CHAT_ID = "-4786867430"

def send_telegram_message(message):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    payload = {"chat_id": TELEGRAM_CHAT_ID, "text": message}
    try:
        requests.post(url, data=payload)
    except Exception as e:
        st.error(f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô Telegram ‡πÑ‡∏î‡πâ: {e}")

# === Database Connection ===
def get_connection():
    return psycopg2.connect(st.secrets["postgres"]["conn_str"])

def insert_repair_request(data):
    with get_connection() as conn:
        cur = conn.cursor()
        query = """
        INSERT INTO repair_request (log_date, shift, department, machine_name, issue_description, reported_by, created_at)
        VALUES (%s, %s, %s, %s, %s, %s, %s)
        """
        cur.execute(query, (
            data["log_date"], data["shift"], data["department"], data["machine_name"],
            data["issue_description"], data["reported_by"], data["created_at"]
        ))
        conn.commit()

# === Streamlit Page ===
st.set_page_config(page_title="‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏±‡∏Å‡∏£", layout="centered")
st.title("üõ†Ô∏è ‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏±‡∏Å‡∏£")

with st.form("repair_form"):
    st.markdown("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô")
    log_date = st.date_input("üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°", datetime.today())
    shift = st.selectbox("üïò ‡∏Å‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", ["Day", "Night"])
    department = st.selectbox("üè≠ ‡πÅ‡∏ú‡∏ô‡∏Å", ["FM", "TP", "FI", "OS", "WH"])
    machine_name = st.text_input("‚öôÔ∏è ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏±‡∏Å‡∏£")
    issue_description = st.text_area("‚ùó ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤")
    reported_by = st.text_input("üë§ ‡∏ú‡∏π‡πâ‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°")
    submitted = st.form_submit_button("üì§ ‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°")

    if submitted:
        if not all([log_date, shift, department, machine_name, issue_description, reported_by]):
            st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°")
        else:
            data = {
                "log_date": log_date,
                "shift": shift,
                "department": department,
                "machine_name": machine_name,
                "issue_description": issue_description,
                "reported_by": reported_by,
                "created_at": datetime.now(),
            }
            try:
                insert_repair_request(data)
                telegram_msg = f"üì¢ ‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡πÉ‡∏´‡∏°‡πà\n‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {log_date}\n‡∏Å‡∏∞: {shift}\n‡πÅ‡∏ú‡∏ô‡∏Å: {department}\n‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á: {machine_name}\n‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: {issue_description}\n‡∏ú‡∏π‡πâ‡πÅ‡∏à‡πâ‡∏á: {reported_by}"
                send_telegram_message(telegram_msg)
                st.success("‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á Telegram ‡πÅ‡∏•‡πâ‡∏ß")
            except Exception as e:
                st.error(f"‚ùå ‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}")
